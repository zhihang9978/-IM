═══════════════════════════════════════════════════════════════
  野火IM UI完整复刻 - 总体主计划
═══════════════════════════════════════════════════════════════

创建时间: 2025-10-17
项目: 蓝信Android客户端UI重写
参考: 野火IM (WildFireChat) android-chat-master
目标: 完整复刻野火IM的UI、交互和逻辑
时间: 7-10天（分多个对话执行）
版权: Apache 2.0

═══════════════════════════════════════════════════════════════
📊 总体进度追踪
═══════════════════════════════════════════════════════════════

当前状态: 阶段1已完成（10%）
剩余工作: 阶段2-14（90%）

完成标准:
  ✅ 所有UI使用野火IM风格
  ✅ 所有交互复刻野火IM
  ✅ 所有消息类型支持
  ✅ 保留蓝信业务逻辑
  ✅ 代码可维护

═══════════════════════════════════════════════════════════════
🗂️ 总体架构（14个主要阶段）
═══════════════════════════════════════════════════════════════

【第一部分：核心UI资源】（3天）
  ✅ 阶段1: 文本消息气泡（已完成）
  ⏳ 阶段2: 语音消息UI
  ⏳ 阶段3: 图片消息UI
  ⏳ 阶段4: 视频消息UI
  ⏳ 阶段5: 文件消息UI

【第二部分：聊天界面】（2天）
  ⏳ 阶段6: 聊天主界面布局
  ⏳ 阶段7: 输入面板完整实现
  ⏳ 阶段8: 扩展功能面板

【第三部分：会话和联系人】（2天）
  ⏳ 阶段9: 会话列表UI
  ⏳ 阶段10: 联系人列表UI
  ⏳ 阶段11: 用户信息页UI

【第四部分：交互和细节】（2-3天）
  ⏳ 阶段12: 长按菜单和手势
  ⏳ 阶段13: 动画和过渡效果
  ⏳ 阶段14: 最终优化和测试

═══════════════════════════════════════════════════════════════
✅ 阶段1: 文本消息气泡（已完成）✔️
═══════════════════════════════════════════════════════════════

完成时间: 2025-10-17
提交: 93c1eed

完成内容:
  ✅ 提取9-patch气泡背景
  ✅ 提取野火IM颜色系统
  ✅ 创建文本消息新布局
  ✅ 更新ChatAdapter
  ✅ 测试通过

资源清单:
  - img_bubble_send.9.png
  - img_bubble_receive.9.png
  - item_message_sent_wildfire.xml
  - item_message_received_wildfire.xml
  - colors.xml（已合并）

成果:
  - 文本消息使用野火IM风格
  - 240dp最大宽度
  - 16sp统一字体
  - autoLink支持

下次对话检查点:
  ✅ 文件是否存在
  ✅ ChatAdapter是否使用wildfire布局
  ✅ 颜色是否包含lightColorPrimary

═══════════════════════════════════════════════════════════════
⏳ 阶段2: 语音消息UI复刻（预计4小时）
═══════════════════════════════════════════════════════════════

目标: 复刻野火IM的语音消息UI和交互

参考文件（野火IM）:
  - android-chat-master/uikit/src/main/res/layout/conversation_item_audio_send.xml
  - android-chat-master/uikit/src/main/res/layout/conversation_item_audio_receive.xml
  - android-chat-master/uikit/src/main/res/drawable/audio_animation_right_list.xml
  - android-chat-master/uikit/src/main/res/drawable/audio_animation_left_list.xml

需要复制的图标（从mipmap-hdpi）:
  - audio_animation_list_right_1.png
  - audio_animation_list_right_2.png
  - audio_animation_list_right_3.png
  - audio_animation_list_left_1.png
  - audio_animation_list_left_2.png
  - audio_animation_list_left_3.png

野火IM设计特点:
  - 固定尺寸: 100dp宽 × 50dp高
  - 时长显示: 在气泡外侧（如"6''"）
  - 播放动画: 3帧循环动画
  - 语音转文字: 气泡下方显示（可选）

执行步骤:

步骤2.1: 复制语音动画图标（30分钟）
```
复制文件（6个）:
  android-chat-master/uikit/src/main/res/mipmap-hdpi/audio_animation_list_right_*.png
  → apps/android/app/src/main/res/mipmap-hdpi/

创建动画drawable:
  - audio_animation_send_wf.xml（发送方）
  - audio_animation_receive_wf.xml（接收方）
```

步骤2.2: 创建语音消息布局（1小时）
```
read_file: android-chat-master/uikit/src/main/res/layout/conversation_item_audio_send.xml

分析结构:
  - RelativeLayout包含ImageView（动画）
  - TextView显示时长
  - 背景使用img_bubble_send

创建新布局:
  write: apps/android/app/src/main/res/layout/item_message_voice_sent_wildfire.xml
  
  关键要素:
  - android:id="@+id/audioContentLayout"（气泡容器）
  - android:id="@+id/audioImageView"（动画图标）
  - android:id="@+id/durationTextView"（时长）
  - layout_width="100dp"
  - layout_height="50dp"
  - background="@drawable/img_bubble_send"
```

步骤2.3: 更新VoiceSentViewHolder（1小时）
```
read_file: apps/android/app/src/main/java/com/lanxin/im/ui/chat/ChatAdapter.kt

修改VoiceSentViewHolder:
  1. 更新inflate使用item_message_voice_sent_wildfire.xml
  2. 更新findViewById使用新的ID
  3. 添加播放动画逻辑
  4. 保留播放功能回调
```

步骤2.4: 重复接收方（1小时）
```
创建: item_message_voice_received_wildfire.xml
更新: VoiceReceivedViewHolder
```

步骤2.5: 测试和Git提交（30分钟）
```
read_lints: ChatAdapter.kt
git add .
git commit -m "UI Stage 2: Voice message UI from WildFire - 3-frame animation, duration display"
```

检查点:
  □ 语音消息使用100dp×50dp固定尺寸
  □ 动画图标显示正常
  □ 时长显示在气泡外
  □ 点击播放功能正常
  □ 无lints错误

═══════════════════════════════════════════════════════════════
⏳ 阶段3: 图片消息UI复刻（预计3小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - conversation_item_image_send.xml
  - conversation_item_image_receive.xml

野火IM设计特点:
  - 自适应尺寸（保持宽高比）
  - 圆角8dp
  - 加载占位图
  - 长按保存提示

执行步骤:

步骤3.1: 读取野火IM布局（30分钟）
```
read_file: android-chat-master/uikit/src/main/res/layout/conversation_item_image_send.xml

分析:
  - ImageView使用Glide加载
  - CardView包装（圆角）
  - 尺寸限制（最小/最大）
  - 加载状态
```

步骤3.2: 创建图片消息布局（1小时）
```
write: item_message_image_sent_wildfire.xml

核心设计:
  - CardView包装
  - ImageView centerCrop
  - 最大宽度: 240dp
  - 最大高度: 320dp
  - 圆角: 8dp
  - 点击预览
```

步骤3.3: 更新ImageViewHolder（1小时）
```
修改ChatAdapter:
  - ImageSentViewHolder使用新布局
  - 添加Glide加载逻辑
  - 保留点击预览功能
```

步骤3.4: Git提交（30分钟）
```
git commit -m "UI Stage 3: Image message UI from WildFire - CardView with rounded corners"
```

检查点:
  □ 图片消息使用CardView圆角
  □ 尺寸自适应且有限制
  □ Glide加载正常
  □ 点击预览功能正常

═══════════════════════════════════════════════════════════════
⏳ 阶段4: 视频消息UI复刻（预计2小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - conversation_item_video_send.xml

需要提取:
  - img_video_play_session.png（播放按钮）
  - img_video_default.png（默认封面）

执行步骤:

步骤4.1: 复制视频相关图标
步骤4.2: 创建视频消息布局
步骤4.3: 更新VideoViewHolder
步骤4.4: Git提交

检查点:
  □ 视频封面显示
  □ 播放按钮居中
  □ 时长标签显示
  □ 点击播放功能正常

═══════════════════════════════════════════════════════════════
⏳ 阶段5: 文件消息UI复刻（预计3小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - conversation_item_file_send.xml
  - conversation_item_file_receive.xml

需要提取（从mipmap-xhdpi）:
  - ic_file_type_pdf.png
  - ic_file_type_word.png
  - ic_file_type_excel.png
  - ic_file_type_ppt.png
  - ic_file_type_image.png
  - ic_file_type_video.png
  - ic_file_type_audio.png
  - ic_file_type_zip.png
  - ic_file_type_unknown.png

野火IM特点:
  - 文件图标根据扩展名自动选择
  - 显示文件名（最多2行）
  - 显示文件大小
  - 下载进度条（可选）

执行步骤:

步骤5.1: 批量复制文件类型图标（30分钟）
```
复制9个文件类型图标到蓝信
```

步骤5.2: 创建文件消息布局（1小时）
```
write: item_message_file_sent_wildfire.xml

包含:
  - ImageView（文件类型图标）
  - TextView（文件名，maxLines=2）
  - TextView（文件大小）
  - ProgressBar（下载进度）
```

步骤5.3: 创建文件类型识别工具类（1小时）
```
创建或更新: FileTypeHelper.kt

fun getFileTypeIcon(fileName: String): Int {
    return when (fileName.substringAfterLast('.')) {
        "pdf" -> R.mipmap.ic_file_type_pdf
        "doc", "docx" -> R.mipmap.ic_file_type_word
        "xls", "xlsx" -> R.mipmap.ic_file_type_excel
        // ...
    }
}
```

步骤5.4: 更新FileViewHolder（30分钟）
步骤5.5: Git提交

检查点:
  □ 文件图标根据类型自动显示
  □ 文件名和大小显示正常
  □ 布局美观
  □ 点击打开功能正常

第一部分完成标志: 所有消息类型UI复刻完成

═══════════════════════════════════════════════════════════════
⏳ 阶段6: 聊天主界面布局重写（预计6小时）
═══════════════════════════════════════════════════════════════

目标: 完整复刻野火IM的ConversationFragment布局

参考文件:
  - conversation_fragment.xml
  - conversation_activity.xml

野火IM核心设计（UI交互设计文档第3.2章）:
```
InputAwareLayout (键盘感知)
└── FrameLayout
    ├── 背景图片容器（可选）
    ├── SwipeRefreshLayout (下拉加载历史)
    │   └── RecyclerView (消息列表)
    ├── 分割线
    ├── ConversationInputPanel (输入面板)
    ├── 多选操作栏 (隐藏)
    ├── 未读消息提示 (右侧悬浮)
    │   ├── 未读数量提示
    │   └── @我的消息提示
    └── 进行中的通话列表 (顶部)
```

执行步骤:

步骤6.1: 分析InputAwareLayout（1小时）
```
read_file: android-chat-master/uikit/src/main/java/cn/wildfire/chat/kit/widget/InputAwareLayout.java

理解功能:
  - 监听键盘显示/隐藏
  - 自动调整内容区域
  - 平滑过渡动画

蓝信替代方案:
  选项A: 复制InputAwareLayout类（推荐）
  选项B: 使用标准布局+键盘监听
```

步骤6.2: 提取Toolbar布局（1小时）
```
read_file: android-chat-master/uikit/src/main/res/layout/toolbar.xml

野火IM设计:
  - 左: 返回按钮
  - 中: 标题+在线状态
  - 右: 语音通话+视频通话+更多

创建: toolbar_chat_wildfire.xml
```

步骤6.3: 创建聊天主布局（2小时）
```
write: activity_chat_wildfire.xml

包含:
  1. Toolbar（顶部栏）
  2. SwipeRefreshLayout
     └── RecyclerView
  3. InputPanel（输入面板）
  4. FloatingActionButton（未读消息提示）
  5. TextView（@我提示）
```

步骤6.4: 更新ChatActivity.kt（1.5小时）
```
read_file: apps/android/app/src/main/java/com/lanxin/im/ui/chat/ChatActivity.kt

修改:
  1. setContentView(R.layout.activity_chat_wildfire)
  2. 更新所有findViewById
  3. 添加SwipeRefreshLayout下拉加载
  4. 添加未读消息提示点击跳转
  5. 保留所有业务逻辑
```

步骤6.5: 测试和提交（30分钟）
```
功能测试:
  - 下拉加载历史消息
  - 未读消息提示
  - Toolbar显示正常
  - 输入框正常

git commit -m "UI Stage 6: Chat main layout from WildFire - SwipeRefreshLayout, unread indicator"
```

检查点:
  □ 布局使用野火IM结构
  □ 下拉加载功能正常
  □ 未读提示显示正常
  □ 所有原有功能保留

═══════════════════════════════════════════════════════════════
⏳ 阶段7: 输入面板完整实现（预计6小时）
═══════════════════════════════════════════════════════════════

目标: 完整复刻野火IM的输入面板（最复杂的部分）

参考文件:
  - conversation_input_panel.xml（布局）
  - ConversationInputPanel.java（逻辑）

需要提取的图标:
  - ic_chat_voice.png（语音按钮）
  - ic_chat_keyboard.png（键盘按钮）
  - ic_chat_emo.png（表情按钮）
  - ic_chat_add.png（更多按钮）
  - ic_chat_menu.png（菜单按钮）

野火IM输入面板状态（UI交互设计文档第3.2章）:
```
状态1: 文本输入模式
  [菜单] [语音] [输入框EditText] [表情] [更多] [发送]

状态2: 语音输入模式
  [菜单] [键盘] [按住说话Button] [表情] [更多]

状态3: 表情面板显示
  [输入框]
  [表情面板Emoji选择器]

状态4: 扩展面板显示
  [输入框]
  [扩展功能网格]
```

执行步骤:

步骤7.1: 复制输入面板图标（30分钟）
```
复制5个图标:
  android-chat-master/uikit/src/main/res/mipmap-xxhdpi/ic_chat_*.png
  → apps/android/app/src/main/res/mipmap-xxhdpi/
```

步骤7.2: 提取输入框背景shape（30分钟）
```
read_file: android-chat-master/uikit/src/main/res/drawable/shape_session_text_input.xml

复制到蓝信:
  write: apps/android/app/src/main/res/drawable/shape_input_text_wf.xml
```

步骤7.3: 创建输入面板布局（2小时）
```
read_file: android-chat-master/uikit/src/main/res/layout/conversation_input_panel.xml

分析结构:
  - LinearLayout根容器
  - 5个ImageView按钮
  - FrameLayout包含EditText和语音Button
  - 状态切换逻辑

创建:
  write: apps/android/app/src/main/res/layout/chat_input_panel_wildfire.xml
  
  适配:
  - 保留蓝信的按钮ID
  - 使用野火IM的视觉设计
  - 添加状态切换支持
```

步骤7.4: 更新ChatActivity输入面板逻辑（2小时）
```
参考: ConversationInputPanel.java的状态切换逻辑

在ChatActivity中实现:
  1. 语音/文本模式切换
  2. 表情面板显示/隐藏
  3. 扩展面板显示/隐藏
  4. 键盘高度自适应
  5. 动画过渡效果
```

步骤7.5: 测试和提交（1小时）
```
测试:
  - 语音/文本切换流畅
  - 表情按钮响应
  - 更多按钮响应
  - 输入框焦点管理

git commit -m "UI Stage 7: Input panel from WildFire - multi-state input with smooth transitions"
```

检查点:
  □ 输入面板使用野火IM风格
  □ 状态切换流畅
  □ 所有按钮响应正常
  □ 键盘适配正常

═══════════════════════════════════════════════════════════════
⏳ 阶段8: 扩展功能面板（预计3小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - conversation_ext_layout.xml

需要提取的功能图标（8个）:
  - ic_func_pic.png（相册）
  - ic_func_shot.png（拍摄）
  - ic_func_location.png（位置）
  - ic_func_file.png（文件）
  - ic_func_video.png（视频）
  - ic_func_voice.png（音频通话）
  - ic_user_card.png（名片）

野火IM设计:
  - 2行4列GridLayout
  - 每个功能: 图标+文字标签
  - 背景色: #F8F8F8

执行步骤:

步骤8.1: 复制功能图标（30分钟）
```
批量复制8个图标到蓝信mipmap-hdpi
```

步骤8.2: 读取扩展面板布局（30分钟）
```
read_file: android-chat-master/uikit/src/main/res/layout/conversation_ext_layout.xml

分析GridLayout结构
```

步骤8.3: 创建扩展面板布局（1小时）
```
write: dialog_more_options_wildfire.xml

设计:
  - GridLayout 2行4列
  - 每个Item: ImageView(48dp) + TextView(功能名)
  - 背景: #F8F8F8
  - Item圆角背景
```

步骤8.4: 更新ChatActivity（1小时）
```
修改showMoreOptions():
  使用新布局
  保留点击事件逻辑
```

步骤8.5: Git提交

检查点:
  □ 8个功能图标精美
  □ 网格布局整齐
  □ 点击响应正常

═══════════════════════════════════════════════════════════════
⏳ 阶段9: 会话列表UI复刻（预计6小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - conversationlist_item_conversation.xml
  - conversationlist_frament.xml

野火IM会话Item设计（UI交互设计文档第3.1章）:
```
┌─────────────────────────────────────┐
│ [头像48dp] [未读徽章红点]           │
│             名称密聊🔒官方    时间   │
│             [草稿]消息预览  [免打扰] │
└─────────────────────────────────────┘
```

需要提取:
  - 徽章背景shape
  - 草稿标识UI
  - 免打扰图标
  - 置顶背景色

执行步骤:

步骤9.1: 提取会话列表相关drawable（1小时）
```
shape_red_dot.xml（未读徽章）
shape_unread_message_count_label_bg.xml（未读数字背景）
selector_stick_top_item.xml（置顶背景）
```

步骤9.2: 创建会话Item布局（2小时）
```
write: item_conversation_wildfire.xml

包含:
  - 48dp头像
  - 未读徽章（QBadgeView或自定义）
  - 标题行（名称+时间）
  - 内容行（草稿标识+消息预览+图标）
  - 置顶背景支持
```

步骤9.3: 更新MessagesFragment和Adapter（2小时）
```
修改ConversationAdapter:
  - 使用新布局
  - 添加置顶逻辑
  - 添加草稿显示
  - 添加未读徽章
```

步骤9.4: 测试和提交（1小时）

检查点:
  □ 48dp头像显示
  □ 未读徽章正确
  □ 置顶会话背景色区分
  □ 消息预览显示
  □ 时间格式化

═══════════════════════════════════════════════════════════════
⏳ 阶段10: 联系人列表UI复刻（预计5小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - contact_item_contact.xml
  - contact_contacts_fragment.xml
  - contact_header_*.xml（功能入口）

野火IM设计:
```
RecyclerView
├── 功能入口区
│   ├── 新的朋友（带徽章）
│   ├── 群聊
│   ├── 频道
│   └── 组织通讯录
├── 星标朋友分组
└── 字母分组联系人（A-Z）
    └── QuickIndexBar（右侧快速索引）
```

执行步骤:

步骤10.1: 创建联系人Item布局（1小时）
```
write: item_contact_wildfire.xml

包含:
  - 分组标题（字母）
  - 40dp头像
  - 昵称
  - 描述信息
  - 复选框（可选）
```

步骤10.2: 创建功能入口布局（2小时）
```
创建:
  - contact_header_friend_wildfire.xml（新的朋友）
  - contact_header_group_wildfire.xml（群聊）

提取图标:
  - ic_new_friend.png
  - ic_group_chat.png
  - ic_channel.png
```

步骤10.3: 添加快速索引条（2小时）
```
参考: QuickIndexBar.java

选项A: 复制QuickIndexBar类
选项B: 使用第三方库
推荐: 暂时使用简单版本，后续优化
```

步骤10.4: Git提交

检查点:
  □ 字母分组显示
  □ 功能入口显示
  □ 头像40dp
  □ 快速索引可用（基础版）

═══════════════════════════════════════════════════════════════
⏳ 阶段11: 用户信息页UI复刻（预计4小时）
═══════════════════════════════════════════════════════════════

参考文件:
  - user_info_fragment.xml

野火IM设计（UI交互设计文档第3.4章）:
```
┌──────────────────────────────────────┐
│  [大头像80dp]        [二维码]         │
├──────────────────────────────────────┤
│  昵称: XXX                           │
│  野火ID: xxxxx                       │
│  电话: 1234567890           [复制]   │
├──────────────────────────────────────┤
│  设置备注和标签                   >  │
│  查看他的消息                     >  │
├──────────────────────────────────────┤
│  [发消息]  [视频聊天]  [语音聊天]   │
├──────────────────────────────────────┤
│  加入黑名单                    [开关] │
│  设为星标好友                  [开关] │
│  消息免打扰                    [开关] │
│  置顶聊天                      [开关] │
└──────────────────────────────────────┘
```

执行步骤:

步骤11.1: 提取OptionItemView（1小时）
```
read_file: android-chat-master/uikit/src/main/res/layout/option_item.xml

野火IM设计:
  - 左: 图标（可选）
  - 中: 标题 + 描述
  - 右: 开关/箭头/自定义

创建: option_item_wildfire.xml
```

步骤11.2: 创建用户信息页布局（2小时）
```
write: fragment_user_info_wildfire.xml

包含:
  - 头像区（大头像+二维码）
  - 信息区（昵称、ID、电话）
  - 选项区（OptionItem列表）
  - 操作按钮区（3个按钮）
```

步骤11.3: 更新UserInfoFragment（1小时）
步骤11.4: Git提交

检查点:
  □ 大头像80dp显示
  □ OptionItem样式统一
  □ 开关功能正常
  □ 操作按钮正常

═══════════════════════════════════════════════════════════════
⏳ 阶段12: 长按菜单和手势（预计4小时）
═══════════════════════════════════════════════════════════════

目标: 复刻野火IM的交互体验

参考:
  - 长按消息菜单（UI交互设计文档第3.2章）
  - 左滑删除会话
  - 下拉刷新

野火IM长按菜单（完整版）:
```
┌──────────────────┐
│ 复制             │
│ 转发             │
│ 收藏             │
│ 撤回             │
│ 删除             │
│ 引用             │
│ 多选             │
│ 举报             │
└──────────────────┘
```

执行步骤:

步骤12.1: 更新消息长按菜单（1小时）
```
read_file: android-chat-master/uikit/src/main/res/menu/conversation.xml

提取图标:
  - ic_msg_copy.png
  - ic_msg_forward.png
  - ic_msg_collect.png
  - ic_msg_rollback.png
  - ic_msg_delete.png
  - ic_msg_quote.png

创建: menu_message_context_wildfire.xml
```

步骤12.2: 添加会话左滑删除（2小时）
```
参考野火IM的左滑删除实现

在ConversationAdapter中添加:
  - ItemTouchHelper
  - 左滑显示删除按钮
  - 滑动动画
```

步骤12.3: 优化下拉刷新（1小时）
```
SwipeRefreshLayout配置:
  - 设置颜色主题
  - 设置刷新回调
  - 添加加载动画
```

步骤12.4: Git提交

检查点:
  □ 长按菜单显示完整
  □ 菜单图标精美
  □ 左滑删除流畅
  □ 下拉刷新正常

═══════════════════════════════════════════════════════════════
⏳ 阶段13: 动画和过渡效果（预计5小时）
═══════════════════════════════════════════════════════════════

目标: 添加野火IM的流畅动画

参考:
  - anim/目录下的动画文件
  - 野火IM的过渡效果

需要提取的动画:
  - 列表Item动画
  - 页面切换动画
  - 弹窗动画

执行步骤:

步骤13.1: 提取动画资源（1小时）
```
list_dir: android-chat-master/uikit/src/main/res/anim/

可能的动画:
  - slide_in_right.xml
  - slide_out_left.xml
  - fade_in.xml
  - fade_out.xml
```

步骤13.2: 添加消息列表动画（2小时）
```
在ChatAdapter中添加:
  - 新消息插入动画
  - 消息删除动画
  - 滚动到底部动画
```

步骤13.3: 添加Activity过渡动画（1小时）
```
在Activity跳转时添加:
  overridePendingTransition()
```

步骤13.4: 添加View动画效果（1小时）
```
- 按钮按下效果（Ripple）
- 面板滑入滑出
- 提示淡入淡出
```

步骤13.5: Git提交

检查点:
  □ 新消息出现有动画
  □ 页面切换流畅
  □ 按钮反馈明显
  □ 整体体验流畅

═══════════════════════════════════════════════════════════════
⏳ 阶段14: 最终优化和测试（预计6小时）
═══════════════════════════════════════════════════════════════

目标: 完善所有细节，达到商业级质量

14.1 视觉细节优化（2小时）
  - 统一所有圆角（4dp/8dp）
  - 统一所有间距（8dp/16dp）
  - 统一所有字体（16sp/14sp/12sp）
  - 调整阴影和层级

14.2 交互细节优化（2小时）
  - 添加震动反馈（长按）
  - 优化点击区域
  - 优化滚动平滑度
  - 优化键盘适配

14.3 性能优化（1小时）
  - RecyclerView优化
  - Glide缓存优化
  - 内存泄漏检查

14.4 全面测试（1小时）
  测试清单:
  □ 所有消息类型显示正常
  □ 所有按钮响应正常
  □ 所有动画流畅
  □ 所有颜色协调
  □ 所有间距统一
  □ 无编译错误
  □ 无运行时错误
  □ 性能流畅

14.5: 最终Git提交
```
git commit -m "UI Complete: WildFire UI integration finished - all stages done, commercial quality achieved"
```

═══════════════════════════════════════════════════════════════
📁 完整资源清单（总览）
═══════════════════════════════════════════════════════════════

需要从野火IM提取的所有资源:

【Drawable资源】约30个
  气泡背景:
  ✅ img_bubble_send.9.png
  ✅ img_bubble_receive.9.png
  
  输入框背景:
  ⏳ shape_session_text_input.xml
  ⏳ shape_session_btn_send.xml
  ⏳ shape_session_btn_voice_*.xml
  
  其他shape:
  ✅ shape_message_ref_bg.xml
  ⏳ shape_red_dot.xml
  ⏳ shape_unread_message_count_label_bg.xml
  
  动画:
  ✅ audio_animation_right_wf.xml
  ⏳ audio_animation_left_wf.xml

【Mipmap图标】约50个
  语音动画（6个）:
  ⏳ audio_animation_list_right_1/2/3.png
  ⏳ audio_animation_list_left_1/2/3.png
  
  输入面板（5个）:
  ⏳ ic_chat_voice.png
  ⏳ ic_chat_keyboard.png
  ⏳ ic_chat_emo.png
  ⏳ ic_chat_add.png
  ⏳ ic_chat_menu.png
  
  扩展功能（8个）:
  ⏳ ic_func_pic.png
  ⏳ ic_func_shot.png
  ⏳ ic_func_location.png
  ⏳ ic_func_file.png
  ⏳ ic_func_video.png
  ⏳ ic_func_voice.png
  ⏳ ic_user_card.png
  
  文件类型（9个）:
  ⏳ ic_file_type_*.png
  
  消息菜单（8个）:
  ⏳ ic_msg_copy/forward/collect/rollback/delete/quote.png
  
  其他:
  ⏳ ic_right_arrow.png
  ⏳ ic_search.png
  ⏳ ic_add.png
  ⏳ img_video_play_session.png

【Layout布局】约20个
  消息气泡（10个）:
  ✅ item_message_sent_wildfire.xml
  ✅ item_message_received_wildfire.xml
  ⏳ item_message_voice_sent_wildfire.xml
  ⏳ item_message_voice_received_wildfire.xml
  ⏳ item_message_image_sent_wildfire.xml
  ⏳ item_message_image_received_wildfire.xml
  ⏳ item_message_video_sent_wildfire.xml
  ⏳ item_message_video_received_wildfire.xml
  ⏳ item_message_file_sent_wildfire.xml
  ⏳ item_message_file_received_wildfire.xml
  
  聊天界面（3个）:
  ⏳ activity_chat_wildfire.xml
  ⏳ chat_input_panel_wildfire.xml
  ⏳ dialog_more_options_wildfire.xml
  
  会话和联系人（5个）:
  ⏳ item_conversation_wildfire.xml
  ⏳ item_contact_wildfire.xml
  ⏳ contact_header_friend_wildfire.xml
  ⏳ contact_header_group_wildfire.xml
  ⏳ fragment_user_info_wildfire.xml
  
  工具布局（2个）:
  ⏳ toolbar_chat_wildfire.xml
  ⏳ option_item_wildfire.xml

【Values配置】
  ✅ colors.xml（已合并部分）
  ⏳ dimens.xml（待完整合并）
  ⏳ styles.xml（待选择性提取）
  ⏳ strings.xml（待选择性添加）

【Java/Kotlin类】（可选）
  可考虑复制:
  ⏳ InputAwareLayout.java（键盘感知布局）
  ⏳ QuickIndexBar.java（快速索引条）
  ⏳ OptionItemView.java（选项Item组件）
  
  不复制（保留蓝信的）:
  ❌ ChatManager
  ❌ MessageViewModel（保留蓝信的）
  ❌ UserViewModel（保留蓝信的）
  ❌ 所有业务逻辑类

═══════════════════════════════════════════════════════════════
🎯 执行策略（分多个对话）
═══════════════════════════════════════════════════════════════

建议分4-5个对话完成:

对话1（当前对话）: ✅ 已完成
  - 阶段1: 文本消息UI

对话2: 预计3-4小时
  - 阶段2: 语音消息UI
  - 阶段3: 图片消息UI
  - 阶段4: 视频消息UI
  - 阶段5: 文件消息UI
  
  启动指令:
  ```
  继续野火IM UI重写 - 执行阶段2-5
  
  阅读计划: WILDFIRE_UI_COMPLETE_REWRITE_MASTER_PLAN.txt
  阅读进度: UI_EXTRACTION_PROGRESS.md
  
  任务: 完成语音、图片、视频、文件消息UI
  野火IM路径: android-chat-master/
  ```

对话3: 预计4-6小时
  - 阶段6: 聊天主界面
  - 阶段7: 输入面板
  - 阶段8: 扩展功能面板
  
  启动指令:
  ```
  继续野火IM UI重写 - 执行阶段6-8
  
  阅读计划和进度文档
  任务: 完成聊天界面、输入面板、扩展面板
  ```

对话4: 预计4-6小时
  - 阶段9: 会话列表
  - 阶段10: 联系人列表
  - 阶段11: 用户信息页

对话5: 预计4-6小时
  - 阶段12: 长按菜单和手势
  - 阶段13: 动画效果
  - 阶段14: 最终优化测试

═══════════════════════════════════════════════════════════════
📊 每个阶段的标准流程
═══════════════════════════════════════════════════════════════

每个阶段必须执行的步骤:

1. 读取计划文档
   read_file: WILDFIRE_UI_COMPLETE_REWRITE_MASTER_PLAN.txt
   找到当前阶段

2. 读取野火IM参考文件
   read_file: android-chat-master/uikit/src/main/res/layout/xxx.xml

3. 分析野火IM设计
   - 记录布局结构
   - 记录关键ID
   - 记录尺寸和样式

4. 提取需要的资源
   - 复制图标
   - 复制drawable
   - 复制配置

5. 创建蓝信新布局
   write: xxx_wildfire.xml
   - 保留野火IM视觉设计
   - 调整ID为蓝信命名
   - 添加Apache 2.0注释

6. 更新Kotlin代码
   - 更新inflate布局
   - 更新findViewById
   - 保留业务逻辑

7. 测试编译
   read_lints: 相关文件

8. Git提交
   git commit -m "UI Stage X: ..."

9. 更新进度文档
   更新: UI_EXTRACTION_PROGRESS.md

═══════════════════════════════════════════════════════════════
⚠️ 防遗忘检查清单
═══════════════════════════════════════════════════════════════

每个阶段完成后必须检查:

UI资源:
  □ 所有需要的图标都已复制
  □ 所有shape/drawable都已创建
  □ 布局文件完整无遗漏
  □ 颜色和尺寸已配置

代码更新:
  □ Adapter已更新使用新布局
  □ Activity/Fragment已更新
  □ findViewById ID都正确
  □ 业务逻辑完整保留

功能测试:
  □ UI显示正常
  □ 点击事件正常
  □ 数据绑定正常
  □ 无编译错误
  □ 无运行时错误

文档记录:
  □ Git已提交
  □ 提交消息清晰
  □ 进度文档已更新
  □ Apache 2.0注释已添加

═══════════════════════════════════════════════════════════════
📝 给下一个对话的启动指令模板
═══════════════════════════════════════════════════════════════

【对话2启动】执行阶段2-5

```
任务: 野火IM UI重写 - 阶段2-5（消息类型UI）

步骤:
1. 阅读总计划:
   read_file: WILDFIRE_UI_COMPLETE_REWRITE_MASTER_PLAN.txt
   定位到: 阶段2-5

2. 阅读进度:
   read_file: UI_EXTRACTION_PROGRESS.md
   确认阶段1已完成

3. 执行阶段2（语音消息）:
   - 复制audio_animation图标（6个）
   - 创建item_message_voice_*_wildfire.xml
   - 更新VoiceViewHolder
   - 测试和提交

4. 执行阶段3（图片消息）:
   - 创建item_message_image_*_wildfire.xml
   - 更新ImageViewHolder
   - 测试和提交

5. 执行阶段4（视频消息）:
   - 复制视频播放图标
   - 创建item_message_video_*_wildfire.xml
   - 更新VideoViewHolder

6. 执行阶段5（文件消息）:
   - 复制文件类型图标（9个）
   - 创建FileTypeHelper.kt
   - 创建item_message_file_*_wildfire.xml
   - 更新FileViewHolder

关键:
- 严格按照主计划执行
- 每个阶段都Git提交
- 更新进度文档
- 保留业务逻辑

野火IM路径: android-chat-master/
蓝信路径: apps/android/

开始执行阶段2！
```

═══════════════════════════════════════════════════════════════
✅ 当前状态和下一步
═══════════════════════════════════════════════════════════════

已完成:
  ✅ 阶段1: 文本消息UI（10%）

待完成:
  ⏳ 阶段2-14（90%）

文档准备:
  ✅ 总体主计划（本文档）
  ✅ UI设计分析文档
  ✅ 进度追踪文档
  ✅ 执行指南

下一步:
  在新对话中使用上述启动指令，继续执行阶段2-5

预期完成时间: 7-10天
预期UI质量: 商业级（90分）

═══════════════════════════════════════════════════════════════

