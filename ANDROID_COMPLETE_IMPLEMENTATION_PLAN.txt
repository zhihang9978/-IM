═══════════════════════════════════════════════════════════════
  Android客户端完整实施计划书
═══════════════════════════════════════════════════════════════

基于: 《客户端计划.txt》
目标: 消除所有占位符，实现所有功能
原则: 不得有TODO、不得有未完成代码、所有按钮必须有实际功能

═══════════════════════════════════════════════════════════════
违规检查结果
═══════════════════════════════════════════════════════════════

当前违规项（必须修复）:
  ❌ ProfileFragment: Toast占位符（收藏、设置、投诉举报）
  ❌ DiscoverFragment: Toast占位符（朋友圈、扫一扫）
  ❌ ContactsFragment: TODO注释
  ❌ 缺失核心功能: 语音、图片、视频、文件、搜索等

客户端计划第八条要求:
  "不得出现'未来开发'或'占位组件'等描述"
  "所有交互、动画、按钮均应具备真实响应事件"
  "所有模块均需一次性完整实现"

═══════════════════════════════════════════════════════════════
实施策略
═══════════════════════════════════════════════════════════════

分5个阶段执行，每个阶段独立提交:

阶段1: 核心消息功能（2小时）
阶段2: 文件和媒体功能（2小时）
阶段3: 设置和账号功能（1.5小时）
阶段4: 社交功能（1.5小时）
阶段5: 高级功能和优化（2小时）

每个阶段执行后立即提交，避免上下文溢出。

═══════════════════════════════════════════════════════════════
阶段1: 核心消息功能（优先级P0）
═══════════════════════════════════════════════════════════════

目标: 实现聊天界面的所有消息类型和交互

任务清单:
  1. 实现消息长按菜单（复制、撤回、删除）
  2. 实现语音消息录制和发送
  3. 实现消息搜索功能
  4. 完善ChatActivity的setupUI方法
  5. 添加输入中动画显示

文件修改:
  - ChatActivity.kt（添加长按菜单逻辑）
  - menu_message_context.xml（消息菜单）
  - VoiceRecorder.kt（语音录制工具类）
  - SearchActivity.kt（搜索页面）
  - activity_search.xml（搜索布局）

验收标准:
  ✅ 长按消息能弹出菜单（复制、撤回、删除）
  ✅ 点击麦克风能录制语音
  ✅ 搜索框能搜索消息
  ✅ 无任何TODO或占位符

═══════════════════════════════════════════════════════════════
阶段2: 文件和媒体功能（优先级P0）
═══════════════════════════════════════════════════════════════

目标: 实现图片、视频、文件的选择和发送

任务清单:
  1. 实现更多选项面板（相册、拍照、视频、文件等8个选项）
  2. 实现相册选择图片
  3. 实现拍照功能
  4. 实现视频录制
  5. 实现文件选择
  6. 实现图片/视频预览
  7. 集成MinIO文件上传

文件修改:
  - dialog_more_options.xml（更多选项布局）
  - ChatActivity.kt（添加媒体选择逻辑）
  - MediaPicker.kt（媒体选择工具类）
  - FileUploadHelper.kt（文件上传助手）
  - ImagePreviewActivity.kt（图片预览）

验收标准:
  ✅ 点击+按钮显示8个选项
  ✅ 点击相册能选择图片
  ✅ 点击拍照能打开相机
  ✅ 选择文件后能上传到MinIO
  ✅ 上传成功后发送消息
  ✅ 无任何TODO或占位符

═══════════════════════════════════════════════════════════════
阶段3: 设置和账号功能（优先级P0）
═══════════════════════════════════════════════════════════════

目标: 实现设置页面和账号管理

任务清单:
  1. 创建SettingsActivity（设置主页）
  2. 实现账号与安全页面
  3. 实现隐私设置页面
  4. 实现通用设置页面
  5. 实现通知设置页面
  6. 实现关于蓝信页面
  7. 实现退出登录功能
  8. ProfileFragment链接到设置

文件新增:
  - SettingsActivity.kt
  - activity_settings.xml
  - AccountSecurityActivity.kt
  - PrivacySettingsActivity.kt
  - GeneralSettingsActivity.kt
  - NotificationSettingsActivity.kt
  - AboutActivity.kt

验收标准:
  ✅ ProfileFragment点击设置进入设置页面
  ✅ 所有设置项都有实际功能
  ✅ 退出登录能清除Token并跳转登录页
  ✅ 无任何Toast占位符

═══════════════════════════════════════════════════════════════
阶段4: 社交功能（优先级P1）
═══════════════════════════════════════════════════════════════

目标: 实现添加好友、投诉举报等社交功能

任务清单:
  1. 实现添加好友功能（搜索、发送请求）
  2. 实现投诉举报功能（三步骤流程）
  3. 实现扫一扫功能（二维码扫描）
  4. 实现收藏功能
  5. ContactsFragment搜索实现
  6. ContactsFragment点击跳转

文件新增:
  - AddFriendActivity.kt
  - ReportActivity.kt（三步骤）
  - ScanQRCodeActivity.kt
  - FavoritesActivity.kt
  - ContactDetailActivity.kt

验收标准:
  ✅ 点击添加好友能搜索用户
  ✅ 投诉举报完整三步骤流程
  ✅ 扫一扫能扫描二维码
  ✅ 所有社交功能实际可用
  ✅ 无任何TODO或占位符

═══════════════════════════════════════════════════════════════
阶段5: 高级功能和优化（优先级P1）
═══════════════════════════════════════════════════════════════

目标: 实现高级功能和用户体验优化

任务清单:
  1. 实现@提醒功能
  2. 实现阅后即焚
  3. 实现头像加载（Glide）
  4. 实现下拉刷新
  5. 实现加载动画
  6. 实现空状态提示
  7. 优化所有交互细节

文件修改:
  - 所有Fragment添加下拉刷新
  - 所有Adapter添加Glide加载
  - 添加空状态布局
  - 添加加载动画

验收标准:
  ✅ 所有头像正常显示
  ✅ 下拉可以刷新
  ✅ 空列表有提示
  ✅ 加载时有动画
  ✅ 所有功能流畅

═══════════════════════════════════════════════════════════════
执行顺序和检查点
═══════════════════════════════════════════════════════════════

执行流程:
  1. 完成阶段1 → 提交 → 验证
  2. 完成阶段2 → 提交 → 验证
  3. 完成阶段3 → 提交 → 验证
  4. 完成阶段4 → 提交 → 验证
  5. 完成阶段5 → 提交 → 最终验证

每阶段检查点:
  - 无TODO注释
  - 无Toast占位符
  - 所有按钮有实际功能
  - 代码可编译
  - 符合MVVM架构
  - 使用dp单位
  - 符合设计文档

═══════════════════════════════════════════════════════════════
后端API支持检查
═══════════════════════════════════════════════════════════════

需要确保后端有以下API（已实现或需新增）:

已有:
  ✅ POST /messages（发送消息）
  ✅ GET /conversations（会话列表）
  ✅ GET /contacts（联系人列表）
  ✅ GET /files/upload-token（文件上传凭证）

需要新增（如果没有）:
  ⏳ POST /contacts/add（添加好友）
  ⏳ GET /users/search（搜索用户）- 已有✅
  ⏳ POST /messages/search（搜索消息）
  ⏳ POST /reports（投诉举报）
  ⏳ GET /favorites（收藏列表）
  ⏳ POST /favorites（添加收藏）

═══════════════════════════════════════════════════════════════
质量保证
═══════════════════════════════════════════════════════════════

每个阶段完成后检查:
  1. 无编译错误
  2. 无TODO注释
  3. 无Toast占位符
  4. 所有按钮有实际跳转或功能
  5. 符合MVVM架构
  6. 遵循Material Design
  7. 100%使用dp单位
  8. 符合《客户端计划.txt》要求

═══════════════════════════════════════════════════════════════
预期成果
═══════════════════════════════════════════════════════════════

完成后的Android客户端:
  ✅ 所有页面精装修（可直接上线）
  ✅ 所有按钮有实际功能
  ✅ 所有交互完整实现
  ✅ 符合微信风格
  ✅ 性能优秀
  ✅ 0个占位符
  ✅ 0个TODO

═══════════════════════════════════════════════════════════════
开始执行
═══════════════════════════════════════════════════════════════

准备好后，将分阶段执行，每个阶段独立提交。

预计总时间: 8-10小时
预计总代码: +3,000行

现在等待指令进入EXECUTE模式开始阶段1。

═══════════════════════════════════════════════════════════════

